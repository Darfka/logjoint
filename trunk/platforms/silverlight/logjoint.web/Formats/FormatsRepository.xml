<?xml version="1.0" encoding="utf-8"?>
<formats>
  <format>
    <regular-grammar>
      <head-re><![CDATA[^ # every message starts from new line
(?<source>.+)\ # log source name
(?<type>Critical|Error|Warning|Information|Verbose|Start|Stop|Suspend|Resume|Transfer)\:\  #severity
(?<eventId>\d+)\s*\:\s* # event number (of ID)]]></head-re>
      <body-re><![CDATA[^ # stick to the beginnig of log range
(?<body>[\s\S]*?) # non-greedy matching for any charachters
(\s*ProcessId\=(?<process>\d+))? # there might be process id - dec number
(\s*LogicalOperationStack\=(?<opStack>[^\r\n]*))? # there might be operation stack
(\s*ThreadId\=(?<thread>\d+))? # there might be thread id - dec number
(\s*DateTime\=(?<date>\d{4}\-\d{2}\-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d+Z)) # datetime
(\s*Timestamp\=(?<ts>\d+))? # timestamp
(\s*Callstack\=(?<stack>.*))?
\s*
$]]></body-re>
      <fields-config>
        <field name="Time"><![CDATA[TO_DATETIME(dateString, "yyyy-MM-ddTHH:mm:ss.fffffffZ")]]></field>
        <field name="Body"><![CDATA[body]]></field>
        <field name="Thread"><![CDATA[(!process.IsEmpty ? (new StringSlice(processString + " - " + threadString)) : thread)]]></field>
        <field name="Process"><![CDATA[process]]></field>
        <field name="Severity" code-type="function"><![CDATA[switch (typeString)
{
case "Critical":
case "Error":
	return Severity.Error;
case "Warning":
	return Severity.Warning;
default:
	return Severity.Info;
}]]></field>
        <field name="EntryType" code-type="function"><![CDATA[switch (typeString)
{
case "Start":
	return EntryType.FrameBegin;
case "Stop":
	return EntryType.FrameEnd;
default:
	return EntryType.Content;
}]]></field>
        <field name="Source"><![CDATA[source]]></field>
        <field name="EventId"><![CDATA[eventId]]></field>
        <field name="OpStack"><![CDATA[opStack]]></field>
        <field name="Timestamp"><![CDATA[ts]]></field>
      </fields-config>
      <patterns />
      <encoding>utf-8</encoding>
    </regular-grammar>
    <id company="Microsoft" name="TextWriterTraceListener" />
    <description>Log files that are created with .NET class TextWriterTraceListener.</description>
    <precompiled-user-code platform="silverlight" type="GeneratedMessageBuilder">precompiled-user-code>
  </format>
  <format>
    <regular-grammar>
      <extensions>
        <extension name="skype" class-name="LogJoint.Skype.Extension, logjoint.skype.plugin.model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
      </extensions>
      <head-re suffers-from-partial-match-problem="yes"><![CDATA[^(?<time>\d{2}\:\d{2}\:\d{2}(\.\d{3})?)\ # time with optional millisecs
T\#(?<thread>\d+)\  # thread id
(?<body1> # optional component specific stuff
   (  # CallManager new logging format
    (?<cmComponent>CM[\w\.]*)\ (?<cmSev>[IWE])\ \d\:\s 
   )
 | (  # legacy VideoManager logging format
     (?<vComponent>V\:\ \d+\.\d+\:\ )(?<vSev>[IWEQRO])\ 
   )
 | (  # VideoManager logging format
     (?<vimComponent>ViM[\w\.]*)\ (?<vimSev>[IOWE])\ \d\:\s 
   )
)?]]></head-re>
      <fields-config>
        <field name="Time" code-type="function"><![CDATA[
DateTime ret = new DateTime(1, 1, 1, TO_INT(time, 0, 2), TO_INT(time, 3, 2), TO_INT(time, 6, 2));
if (time.Length > 9) 
  ret = ret.AddMilliseconds(TO_INT(time, 9, 3));
return skype.DATETIME_FROM_TIME(POSITION(), ret);]]></field>
        <field name="Body" code-type="function"><![CDATA[
if (!body1.IsEmpty)
{
  return StringSlice.Concat(body1, body);
}
return body;]]></field>
        <field name="Thread"><![CDATA[thread]]></field>
        <field name="Severity" code-type="function"><![CDATA[
if (!cmSev.IsEmpty)
switch (cmSev[0])
{
case 'W': return Severity.Warning;
case 'E': return Severity.Error;
}
if (!vSev.IsEmpty)
switch (vSev[0])
{
case 'W': return Severity.Warning;
case 'E': return Severity.Error;
}
if (!vimSev.IsEmpty)
switch (vimSev[0])
{
case 'W': return Severity.Warning;
case 'E': return Severity.Error;
}
return Severity.Info;]]></field>
        <field name="EntryType" code-type="function"><![CDATA[
bool takeFrameCharInUse = false;
bool checkThatCloseBraceIsNotPaired = false;

if (!cmComponent.IsEmpty)
{
  takeFrameCharInUse = true;
}
else if (!vComponent.IsEmpty)
{
  takeFrameCharInUse = true;
  checkThatCloseBraceIsNotPaired = true;
}
else if (!vimComponent.IsEmpty)
{
  takeFrameCharInUse = true;
  checkThatCloseBraceIsNotPaired = true;
}
 
if (takeFrameCharInUse)
{
  switch (skype.FIND_ENTRY_TYPE_CHAR(body, checkThatCloseBraceIsNotPaired))
  {
  case '{': return EntryType.FrameBegin;
  case '}': return EntryType.FrameEnd;
  }
}
return EntryType.Content;
]]></field>
      </fields-config>
      <patterns>
        <pattern>*.log</pattern>
      </patterns>
      <encoding>ACP</encoding>
      <dejitter jitter-buffer-size="32" />
    </regular-grammar>
    <id company="Skype" name="Deobfuscated corelib log" />
    <description></description>
    <precompiled-user-code platform="silverlight" type="GeneratedMessageBuilder">precompiled-user-code>
  </format>
</formats>